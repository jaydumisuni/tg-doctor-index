{
  "version": "1.4",
  "os": "windows",
  "items": [
    {
      "id": "checkm8-pack",
      "title": "TechGuy Checkm8 Pack",
      "release": {
        "direct": "https://github.com/jaydumisuni/TechGuyCheckm8/releases/latest/download/TechGuyCheckm8.zip"
      },
      "install": { "type": "unzip", "dest": "{cache_root}/" },
      "check": {
        "type": "multi_any",
        "checks": [
          { "type": "exec_ok", "path": "{cache_root}/TechGuyCheckm8/tools/win/irecovery.exe", "args": ["-V"] },
          { "type": "file_exists", "path": "{cache_root}/TechGuyCheckm8/tools/win/irecovery.exe" }
        ]
      }
    },
    {
      "id": "libusb-runtime-win",
      "title": "libusb runtime (win)",
      "release": {
        "direct": "https://github.com/jaydumisuni/libusb/releases/download/v1.0.29/libusb-1.0.29-win64.zip"
      },
      "install": { "type": "unzip", "dest": "{cache_root}/TechGuyCheckm8/tools/win/" },
      "check": {
        "type": "multi_any",
        "checks": [
          { "type": "file_exists", "path": "{cache_root}/TechGuyCheckm8/tools/win/libusb-1.0.dll" },
          { "type": "exec_ok", "path": "{cache_root}/TechGuyCheckm8/tools/win/irecovery.exe", "args": ["-V"] }
        ]
      }
    },
    {
      "id": "python3-runtime-win",
      "title": "Python3 runtime (win)",
      "check": {
        "type": "exec_ok",
        "path": "py",
        "args": ["-3", "--version"]
      },
      "notes": "Python 3 not found. Install from https://www.python.org/downloads/windows/ and ensure the 'py' launcher is available."
    },
    {
      "id": "ipwndfu-win",
      "title": "ipwndfu (win)",
      "release": {
        "direct": "https://github.com/jaydumisuni/ipwndfu/archive/refs/heads/master.zip"
      },
      "install": { "type": "unzip", "dest": "{cache_root}/TechGuyCheckm8/tools/win/" },
      "check": {
        "type": "exec_ok",
        "path": "py",
        "args": ["-3", "{cache_root}/TechGuyCheckm8/tools/win/ipwndfu-master/ipwndfu", "-h"]
      }
    },
    {
      "id": "apple-windows-drivers-pack",
      "title": "Apple + Arduino Windows Drivers",
      "release": {
        "direct": "https://github.com/jaydumisuni/Apple-windows-drivers/releases/download/v1/Apple.windows.drivers.zip"
      },
      "install": { "type": "unzip", "dest": "{cache_root}/" },
      "check": {
        "type": "multi_any",
        "checks": [
          { "type": "file_exists", "path": "{cache_root}/apple_dfu" },
          { "type": "file_exists", "path": "{cache_root}/apple_mobile_device_support" },
          { "type": "file_exists", "path": "{cache_root}/libusbk" },
          { "type": "file_exists", "path": "{cache_root}/UsbDk" },
          { "type": "file_exists", "path": "{cache_root}/arduino_driver/Arduino/libraries/USB_Host_Shield_2.0" },
          { "type": "file_exists", "path": "{cache_root}/arduino_driver/Arduino/libraries/USB_Host_Shield_Library_2.0" },
          { "type": "file_exists", "path": "{cache_root}/arduino_driver/Arduino/libraries/checkm8-a5-master" },
          { "type": "file_exists", "path": "{cache_root}/arduino-cli core" }
        ]
      }
    },
    {
      "id": "zadig-tool-win",
      "title": "Zadig USB Driver Tool (win)",
      "release": {
        "direct": "https://github.com/jaydumisuni/Apple-windows-drivers/releases/download/v1/zadig.zip"
      },
      "install": { "type": "unzip", "dest": "{cache_root}/TechGuyCheckm8/tools/win/" },
      "check": {
        "type": "file_exists",
        "path": "{cache_root}/TechGuyCheckm8/tools/win/zadig.exe"
      },
      "notes": "Use Zadig to bind DFU to WinUSB/libusbK:\n1) Put device in DFU (black screen).\n2) Open {cache_root}/TechGuyCheckm8/tools/win/zadig.exe.\n3) Options → List All Devices.\n4) Select 'Apple Mobile Device (DFU Mode)'.\n5) Choose 'WinUSB' or 'libusbK' → Install Driver."
    },
    {
      "id": "dfu-driver-binding-win",
      "title": "DFU driver binding (WinUSB/libusbK)",
      "check": {
        "type": "exec_ok",
        "path": "powershell",
        "args": [
          "-NoProfile",
          "-Command",
          "$has = Get-PnpDevice -PresentOnly | Where-Object {$_.InstanceId -match 'VID_05AC&PID_1227'} | ForEach-Object { try { (Get-PnpDeviceProperty -InstanceId $_.InstanceId -KeyName 'DEVPKEY_Device_DriverInfPath').Data } catch {} } | Where-Object { $_ -match 'winusb|libusbk' }; if ($has) { exit 0 } else { exit 1 }"
        ]
      },
      "notes": "If this fails: DFU is bound to Apple driver. Run Zadig → select 'Apple Mobile Device (DFU Mode)' → choose WinUSB or libusbK → Install Driver → re-run checks."
    }
  ]
}

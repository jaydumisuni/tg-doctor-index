{
  "version": "1.1",
  "os": "windows",
  "items": [
    {
      "id": "checkm8-pack",
      "title": "TechGuy Checkm8 Pack",
      "release": {
        "direct": "https://github.com/jaydumisuni/TechGuyCheckm8/releases/latest/download/TechGuyCheckm8.zip"
      },
      "install": { "type": "unzip", "dest": "{cache_root}/" },
      "check": {
        "type": "multi_any",
        "checks": [
          { "type": "exec_ok",    "path": "{cache_root}/tools/win/irecovery.exe", "args": ["-V"] },
          { "type": "file_exists","path": "{cache_root}/tools/win/irecovery.exe" }
        ]
      }
    },

    {
      "id": "libusb-runtime-win",
      "title": "libusb runtime (win)",
      "platform": ["win32", "win64"],
      "release": {
        "direct": "https://github.com/jaydumisuni/libusb/releases/download/v1.0.29/libusb-1.0.29.zip"
      },
      "install": [
        { "type": "unzip", "src": null, "dest": "{cache_root}/tmp/libusb_1_0_29" },

        /* If supported by your engine: copy the first matching DLL into tools/win */
        {
          "type": "copy_first_match",
          "from_glob": "{cache_root}/tmp/libusb_1_0_29/**/libusb-1.0.dll",
          "to": "{cache_root}/tools/win/libusb-1.0.dll",
          "mkdirs": true,
          "overwrite": true
        }

        /* If your engine doesn't have copy_first_match, replace the block above
           with your equivalent relocate/copy ops â€” goal: end with
           {cache_root}/tools/win/libusb-1.0.dll present. */
      ],
      "check": {
        "type": "multi_any",
        "checks": [
          { "type": "file_exists", "path": "{cache_root}/tools/win/libusb-1.0.dll" },
          { "type": "exec_ok",     "path": "{cache_root}/tools/win/irecovery.exe", "args": ["-V"] }
        ]
      },
      "notes": "Fetches your vendored libusb v1.0.29, unzips to tmp, then stages libusb-1.0.dll next to irecovery.exe so DFU tooling works on Windows."
    }
  ]
}
